;;; -*- Scheme -*-
;;;
;;; Copyright 2010 Free Software Foundation, Inc.
;;;
;;; This file is part of GNU Radio
;;;
;;; GNU Radio is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 3, or (at your option)
;;; any later version.
;;;
;;; GNU Radio is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program.  If not, see <http://www.gnu.org/licenses/>.
;;;

;;; If you're using Emacs's Scheme mode:
;;;   (put 'with-test-prefix 'scheme-indent-function 1)

;;; See the comments in gnuradio/test-suite/lib.scm for info on writing tests.
;;; See also the very end of the file, where the test-equal, test-eqv
;;; and test-eq macros are defined.

(use-modules (gnuradio test-suite lib))
(use-modules (gnuradio core))
(use-modules (oop goops))

;;; Add test code for all constructors in these files
;;;

;;; ./gengen/gr_add_cc.h
(pass-if (true? (gr:add-cc 1)))

;;; ./gengen/gr_add_const_cc.h
(pass-if (true? (gr:add-const-cc 0)))

;;; ./gengen/gr_add_const_ff.h
(pass-if (true? (gr:add-const-ff 0)))

;;; ./gengen/gr_add_const_ii.h
(pass-if (true? (gr:add-const-ii 0)))

;;; ./gengen/gr_add_const_sf.h
(pass-if (true? (gr:add-const-sf 0)))

;;; ./gengen/gr_add_const_ss.h
(pass-if (true? (gr:add-const-ss 0)))

;;; ./gengen/gr_add_const_vcc.h
(pass-if (true? (gr:add-const-vcc #(1+3i 23+5i))))

;;; ./gengen/gr_add_const_vff.h
(pass-if (true? (gr:add-const-vff #(1.0 2.0))))

;;; ./gengen/gr_add_const_vii.h
(pass-if (true? (gr:add-const-vii #(1 2))))

;;; ./gengen/gr_add_const_vss.h
(pass-if (true? (gr:add-const-vss #(1 2))))

;;; ./gengen/gr_add_ff.h
(pass-if (true? (gr:add-ff 1)))

;;; ./gengen/gr_add_ii.h
(pass-if (true? (gr:add-ii 1)))

;;; ./gengen/gr_add_ss.h
(pass-if (true? (gr:add-ss 1)))

;;; ./gengen/gr_and_bb.h
(pass-if (true? (gr:and-bb)))

;;; ./gengen/gr_and_const_bb.h
(pass-if (true? (gr:and-const-bb 0)))

;;; ./gengen/gr_and_const_ii.h
(pass-if (true? (gr:and-const-ii 0)))

;;; ./gengen/gr_and_const_ss.h
(pass-if (true? (gr:and-const-ss 0)))

;;; ./gengen/gr_and_ii.h
(pass-if (true? (gr:and-ii)))

;;; ./gengen/gr_and_ss.h
(pass-if (true? (gr:and-ss)))

;;; ./gengen/gr_argmax_fs.h
(pass-if (true? (gr:argmax-fs 1)))

;;; ./gengen/gr_argmax_is.h
(pass-if (true? (gr:argmax-is 1)))

;;; ./gengen/gr_argmax_ss.h
(pass-if (true? (gr:argmax-ss 1)))

;;; ./gengen/gr_chunks_to_symbols_bc.h
(pass-if (true? (gr:chunks-to-symbols-bc #(1+3i 23+5i) 1)))

;;; ./gengen/gr_chunks_to_symbols_bf.h
(pass-if (true? (gr:chunks-to-symbols-bf #(1.0 2.0) 1)))

;;; ./gengen/gr_chunks_to_symbols_ic.h
(pass-if (true? (gr:chunks-to-symbols-ic #(1+3i 23+5i) 1)))

;;; ./gengen/gr_chunks_to_symbols_if.h
(pass-if (true? (gr:chunks-to-symbols-if #(1.0 2.0) 1)))

;;; ./gengen/gr_chunks_to_symbols_sc.h
(pass-if (true? (gr:chunks-to-symbols-sc #(1.0 2.0) 1)))

;;; ./gengen/gr_chunks_to_symbols_sf.h
(pass-if (true? (gr:chunks-to-symbols-sf #(1.0 2.0) 1)))

;;; ./gengen/gr_divide_cc.h
(pass-if (true? (gr:divide-cc 1)))

;;; ./gengen/gr_divide_ff.h
(pass-if (true? (gr:divide-ff 1)))

;;; ./gengen/gr_divide_ii.h
(pass-if (true? (gr:divide-ii 1)))

;;; ./gengen/gr_divide_ss.h
(pass-if (true? (gr:divide-ss 1)))

;;; ./gengen/gr_integrate_cc.h
(pass-if (true? (gr:integrate-cc 0)))

;;; ./gengen/gr_integrate_ff.h
(pass-if (true? (gr:integrate-ff 0)))

;;; ./gengen/gr_integrate_ii.h
(pass-if (true? (gr:integrate-ii 0)))

;;; ./gengen/gr_integrate_ss.h
(pass-if (true? (gr:integrate-ss 0)))

;;; ./gengen/gr_max_ff.h
(pass-if (true? (gr:max-ff 1)))

;;; ./gengen/gr_max_ii.h
(pass-if (true? (gr:max-ii 1)))

;;; ./gengen/gr_max_ss.h
(pass-if (true? (gr:max-ss 1)))

;;; ./gengen/gr_moving_average_cc.h
(pass-if (true? (gr:moving-average-cc 1 1+3i 4096)))

;;; ./gengen/gr_moving_average_ff.h
(pass-if (true? (gr:moving-average-ff 1 0 4096)))

;;; ./gengen/gr_moving_average_ii.h
(pass-if (true? (gr:moving-average-ii 1 0 4096)))

;;; ./gengen/gr_moving_average_ss.h
(pass-if (true? (gr:moving-average-ss 1 0 4096)))

;;; ./gengen/gr_multiply_cc.h
(pass-if (true? (gr:multiply-cc 1)))

;;; ./gengen/gr_multiply_const_cc.h
(pass-if (true? (gr:multiply-const-cc 1)))

;;; ./gengen/gr_multiply_const_ff.h
(pass-if (true? (gr:multiply-const-ff 1)))

;;; ./gengen/gr_multiply_const_ii.h
(pass-if (true? (gr:multiply-const-ii 1)))

;;; ./gengen/gr_multiply_const_ss.h
(pass-if (true? (gr:multiply-const-ss 1)))

;;; ./gengen/gr_multiply_const_vcc.h
(pass-if (true? (gr:multiply-const-vcc #(1+3i 23+5i))))

;;; ./gengen/gr_multiply_const_vff.h
(pass-if (true? (gr:multiply-const-vff #(1.0 2.0))))

;;; ./gengen/gr_multiply_const_vii.h
(pass-if (true? (gr:multiply-const-vii #(1 2))))

;;; ./gengen/gr_multiply_const_vss.h
(pass-if (true? (gr:multiply-const-vss #(1 2))))

;;; ./gengen/gr_multiply_ff.h
(pass-if (true? (gr:multiply-ff 1)))

;;; ./gengen/gr_multiply_ii.h
(pass-if (true? (gr:multiply-ii 1)))

;;; ./gengen/gr_multiply_ss.h
(pass-if (true? (gr:multiply-ss 1)))

;;; ./gengen/gr_mute_cc.h FIXME: not found
(pass-if (true? (gr:mute-cc #f)))

;;; ./gengen/gr_mute_ff.h FIXME: not found
(pass-if (true? (gr:mute-ff #f)))

;;; ./gengen/gr_mute_ii.h FIXME: not found
(pass-if (true? (gr:mute-ii #f)))

;;; ./gengen/gr_mute_ss.h FIXME: not found
(pass-if (true? (gr:mute-ss #f)))

;;; ./gengen/gr_noise_source_c.h
(pass-if (true? (gr:noise-source-c 1 0 3021)))

;;; ./gengen/gr_noise_source_f.h
(pass-if (true? (gr:noise-source-f 1 0 3021)))

;;; ./gengen/gr_noise_source_i.h
(pass-if (true? (gr:noise-source-i 1 0 3021)))

;;; ./gengen/gr_noise_source_s.h
(pass-if (true? (gr:noise-source-s 1 0 3021)))

;;; ./gengen/gr_not_bb.h
(pass-if (true? (gr:not-bb)))

;;; ./gengen/gr_not_ii.h
(pass-if (true? (gr:not-ii)))

;;; ./gengen/gr_not_ss.h
(pass-if (true? (gr:not-ss)))

;;; ./gengen/gr_or_bb.h
(pass-if (true? (gr:or-bb)))

;;; ./gengen/gr_or_ii.h
(pass-if (true? (gr:or-ii)))

;;; ./gengen/gr_or_ss.h
(pass-if (true? (gr:or-ss)))

;;; ./gengen/gr_packed_to_unpacked_bb.h
(pass-if (true? (gr:packed-to-unpacked-bb 1 1)))

;;; ./gengen/gr_packed_to_unpacked_ii.h
(pass-if (true? (gr:packed-to-unpacked-ii 1 1)))

;;; ./gengen/gr_packed_to_unpacked_ss.h
(pass-if (true? (gr:packed-to-unpacked-ss 1 1)))

;;; ./gengen/gr_peak_detector_fb.h
(pass-if (true? (gr:peak-detector-fb 0.25 0.40 10 0.001)))

;;; ./gengen/gr_peak_detector_ib.h
(pass-if (true? (gr:peak-detector-ib 0.25 0.40 10 0.001)))

;;; ./gengen/gr_peak_detector_sb.h
(pass-if (true? (gr:peak-detector-sb 0.25 0.40 10 0.001)))

;;; ./gengen/gr_sample_and_hold_bb.h
(pass-if (true? (gr:sample-and-hold-bb)))

;;; ./gengen/gr_sample_and_hold_ff.h
(pass-if (true? (gr:sample-and-hold-ff)))

;;; ./gengen/gr_sample_and_hold_ii.h
(pass-if (true? (gr:sample-and-hold-ii)))

;;; ./gengen/gr_sample_and_hold_ss.h
(pass-if (true? (gr:sample-and-hold-ss)))

;;; ./gengen/gr_sig_source_c.h
(pass-if (true? (gr:sig-source-c 0 0 0 0 0)))

;;; ./gengen/gr_sig_source_f.h
(pass-if (true? (gr:sig-source-f 0 0 0 0 0)))

;;; ./gengen/gr_sig_source_i.h
(pass-if (true? (gr:sig-source-i 0 0 0 0 0)))

;;; ./gengen/gr_sig_source_s.h
(pass-if (true? (gr:sig-source-s 0 0 0 0 0)))

;;; ./gengen/gr_sub_cc.h
(pass-if (true? (gr:sub-cc 1)))

;;; ./gengen/gr_sub_ff.h
(pass-if (true? (gr:sub-ff 1)))

;;; ./gengen/gr_sub_ii.h
(pass-if (true? (gr:sub-ii 1)))

;;; ./gengen/gr_sub_ss.h
(pass-if (true? (gr:sub-ss 1)))

;;; ./gengen/gr_unpacked_to_packed_bb.h
(pass-if (true? (gr:unpacked-to-packed-bb 1 1)))

;;; ./gengen/gr_unpacked_to_packed_ii.h
(pass-if (true? (gr:unpacked-to-packed-ii 1 1)))

;;; ./gengen/gr_unpacked_to_packed_ss.h
(pass-if (true? (gr:unpacked-to-packed-ss 1 1)))

;;; ./gengen/gr_vector_sink_b.h
(pass-if (true? (gr:vector-sink-b 1)))

;;; ./gengen/gr_vector_sink_c.h
(pass-if (true? (gr:vector-sink-c 1)))

;;; ./gengen/gr_vector_sink_f.h
(pass-if (true? (gr:vector-sink-f 1)))

;;; ./gengen/gr_vector_sink_i.h
(pass-if (true? (gr:vector-sink-i 1)))

;;; ./gengen/gr_vector_sink_s.h
(pass-if (true? (gr:vector-sink-s 1)))

;;; ./gengen/gr_vector_source_b.h
;; (pass-if (true? (gr:vector-source-b #(1 2) #f 1)))

;; ;;; ./gengen/gr_vector_source_c.h
;; (pass-if (true? (gr:vector-source-c #(1+3i 23+5i) #f 1)))

;; ;;; ./gengen/gr_vector_source_f.h
;; (pass-if (true? (gr:vector-source-f #(1.0 2.0) #f 1)))

;;; ./gengen/gr_vector_source_i.h
;; (pass-if (true? (gr:vector-source-i #(1 2) #f 1)))

;;; ./gengen/gr_vector_source_s.h FIXME: not found
;; (pass-if (true? (gr:vector-source-s #(1 2) #f 1)))

;;; ./gengen/gr_xor_bb.h
(pass-if (true? (gr:xor-bb)))

;;; ./gengen/gr_xor_ii.h
(pass-if (true? (gr:xor-ii)))

;;; ./gengen/gr_xor_ss.h
(pass-if (true? (gr:xor-ss)))
