/* -*- c++ -*- */
/*
 * Copyright 2004 Free Software Foundation, Inc.
 * 
 * This file is part of GNU Radio
 * 
 * GNU Radio is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3, or (at your option)
 * any later version.
 * 
 * GNU Radio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with GNU Radio; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street,
 * Boston, MA 02110-1301, USA.
 * 
 * This file is automatically generated by SSP wrapper v0.1 
 * by Xingzhong at Friday 09. March 2012
 */


#ifndef INCLUDED_SSP_MYSQUARE_FF_H
#define INCLUDED_SSP_MYSQUARE_FF_H

#include <api.h>
#include <gr_block.h>

void ssp_kernel(const float*, float*, int);

class ssp_mysquare_ff;

typedef boost::shared_ptr<ssp_mysquare_ff> ssp_mysquare_ff_sptr;

/*!
 * \brief Return a shared_ptr to a new instance of ssp_mysquare_ff.
 *
 * To avoid accidental use of raw pointers, ssp_mysquare_ff's
 * constructor is private.  ssp_make_mysquare_ff is the public
 * interface for creating new instances.
 */
SSP_API ssp_mysquare_ff_sptr ssp_make_mysquare_ff ();

/*!
 * \brief square a stream of floats.
 * \ingroup block
 *
 * \sa ssp_mysquare_ff for a version that subclasses .
 */
class SSP_API ssp_mysquare_ff : public gr_block
{
private:
  // The friend declaration allows ssp_make_mysquare_ff to
  // access the private constructor.

  friend SSP_API ssp_mysquare_ff_sptr ssp_make_mysquare_ff ();

  /*!
   * \brief square a stream of floats.
   */
  ssp_mysquare_ff ();  	// private constructor

 public:
  ~ssp_mysquare_ff ();	// public destructor

  // Where all the action really happens

  int general_work (int noutput_items,
		    gr_vector_int &ninput_items,
		    gr_vector_const_void_star &input_items,
		    gr_vector_void_star &output_items);
};

#endif /* INCLUDED_SSP_SSP_MYSQUARE_FF_H*/
